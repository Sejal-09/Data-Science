import matplotlib.pyplot as plt
# create a figure and axis
fig, ax = plt.subplots()

x= [1,3,4,6,7,9,8,5,2,4,6,7,9,1,2]
y=[7,4,1,8,5,2,3,6,9,8,5,2,1,4,7]
ax.scatter(x,y)
import pandas as pd
iris = pd.read_csv("C:/Users/Harish/Desktop/FDS/Iris.csv", names=['id', 'sepal_length', 'sepal_width', 'petal_length', 'petal_width', 'class'], index_col=0)
print(iris.head())
import matplotlib.pyplot as plt
# create a figure and axis
fig, ax = plt.subplots()

# scatter the sepal_length against the sepal width
ax.scatter(iris['sepal_length'], iris['sepal_width'])
# set a title and labels
ax.set_title('Iris Dataset')
ax.set_xlabel('sepal_length')
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
x=range(1,6)
y=np.random.randint(1,20,5)
plt.plot(x,y)

plt.xticks(x)
plt.yticks(y)x.set_ylabel('sepal_width')
import pandas as pd
import numpy as np
from matplotlib import pyplot as plt
x=range(1,6)
y=np.random.randint(1,20,5)
plt.plot(x,y)

plt.xticks(x)
plt.yticks(y)
y=np.random.randint(1,20,5)
y
import matplotlib.pyplot as plt
# create a figure and axis
fig, ax = plt.subplots()

x= [2, 3, 4, 6, 3, 7, 8]
y=[4, 6, 8, 1, 2, 6, 9]
ax.plot(x,y)
import pandas as pd
df = pd.DataFrame({
    'name' : ['john', 'mary', 'peter', 'jeff', 'bill', 'lisa' ],
    'age' : [23, 78, 22, 19, 45, 20],
    'gender' : ['M', 'F', 'M', 'M', 'M', 'F'],
    'num_children' : [2, 0, 0, 3, 2, 1],
    'num_pets' : [5, 1, 0, 5, 2, 2]
})

ax = plt.gca
# get columns to plot
columns = iris.columns.drop(['class'])
# create x data
x_data = range(0, iris.shape[0])
# create figure and axis
fig, ax = plt.subplots()
# plot each column
for column in columns:
    ax.plot(x_data, iris[column], label= column)
# set title and legend
ax.set_title('Iris Dataset')
ax.legend()
# create figure and axis
fig,ax = plt.subplots()
# plot histogram
ax.hist(iris['sepal_length'])
# set title and labels
ax.set_title('iris')
ax.set_xlabel('sepal_length')
ax.set_ylabel('Frequency')
wine_reviews = pd.read_csv("C:/Users/Harish/Desktop/FDS/winemag-data-130k-v2.csv", index_col=0)
wine_reviews.head()
# Bar Chart
# create a figure and axis
fig, ax = plt.subplots()
# count the ocurrence of each class
data = wine_reviews['points'].value_counts()
# get x and y data
points = data.index
frequency = data.values
# create bar chart
ax.bar(points, frequency)
# set title and labels
ax.set_title("Wine Review Scores")
ax.set_xlabel("Points")
ax.set_ylabel('Frequency')
wine_reviews['points'].value_counts().sort_index().plot.bar()
wine_reviews.groupby('country').price.mean().sort_values(ascending=False)[:6].plot.bar()
import numpy as np
import matplotlib.pyplot as plt
objects = ('Python', 'C++', 'Java', 'Perl', 'Scala', 'Lisp')
y_pos = np.arange(len(objects))
perfomance = [10, 8, 6, 4, 2, 1]
plt.bar(y_pos, perfomance, width=0.5, align='center', alpha=0.7, color=['r', 'r', 'g', 'g', 'b', 'b'])
plt.xticks(y_pos, objects)
plt.ylabel('Usage')
plt.xlabel('Programming Languages')
plt.title('Programming language usage')
import matplotlib.pyplot as plt

# Declaring the figure or the plot (y,x) or (width, height)
plt.figure(figsize=(12, 7))

# Categorical data: Country names
countries = ['USA', 'Brazil', 'Russia', 'Spain', 'UK', 'India']

# integer value interms of death counts
totalDeaths = [112596, 37312, 5971, 27136, 40597, 7449]

# Passing the parameters to the bar function, this is the main function which creates the bar plot
plt.bar(countries, totalDeaths, width=0.9, align='center', color='cyan', edgecolor = 'red')

# This is the location for the annotated text
i =1.0
j =2000

# Annotating the bar plot with the values (total death counts)
for i in range(len(countries)):
    plt.annotate(totalDeaths[i], (-0.1+ i, totalDeaths[i] + j))

# Creating legend of the bars in the plot
plt.legend(labels = ['Total Deaths'])

# Giving the title for the plot
plt.title('Bar plot representing the total deaths by top 6 countries due to coronavirus')

# Naming the x and y axis
plt.xlabel('Countries')
plt.ylabel('Deaths')

# Saving the plot as a 'png'
plt.savefig("BarPlot.png")

# Display the bar plot
plt.show()

wine_reviews['points'].value_counts().sort_index().plot.barh()
#Importing matplotlib(librabry)
import matplotlib.pyplot as plt

#Declaring the figure or the plot (y,x) or (width,height)
plt.figure(figsize=[14,10])

#Passing the parameters to the bar functions,this is the main function which creates the bar plot 
#For creating the horizontal make sure that you append 'h' to the bar function name
plt.barh(['USA','Barzil','Russia','Spain','UK'],[2026493,710887,476658,288797,287399],label='Danger zone',color='red')
plt.barh(['India','Italy','Peru','Germany','Iran'],[265928,235278,199696,186205,173832],label='Not safe zone',color='blue')

#Creating the legend of the bars in the plot
plt.legend()

#Nmaing the x and y axis
plt.xlabel('Total cases')
plt.ylabel('Countries')

#Giving the title for the plot
plt.title('Top ten countries most affected by \n coronavirus')

#Saving the plot as a 'png'
plt.savefig('2BarPlot.png')

#Displaying the bar plot
plt.show()
import pandas as pd
df=pd.DataFrame({
    'Name':['john','mary','peter','jeff','bill','lisa','jose'],
    'age':[23,78,22,19,45,33,20],
    'gender':['M','F','M','M','M','F','M'],
    'state':['california','dc','california','dc','california','texas','texas'],
    'num_children':[2,0,0,3,2,1,4],
    'num_pets':[5,1,0,5,2,2,3]
})
#From pandas to plot multiple plots on same figure

df.groupby(['state','gender']).size().unstack().plot(kind='bar',stacked=True)
df.groupby(['gender','state']).size().unstack().plot(kind='bar',stacked=True)
import pandas as pd
from matplotlib import pyplot as plt

Data={'Country':['USA','Canada','Germany','UK','France'],
      'GDP_Per_Capita':[45000,42000,52000,49000,47000],
      'Income_Per_Capita':[4000,5000,7000,55000,60000]
     }

df=pd.DataFrame(Data)
#Multiple metrics in same chart
df.plot(x='Country',y=['GDP_Per_Capita', 'Income_Per_Capita'], kind='bar')
#Importing the matplotlib library
import numpy as np
import matplotlib.pyplot as plt

#Declaring the figure or the plot (y,x) or (width,height)
plt.figure(figsize=[15,10])

#Data to be ploted
totalDeath=[113055,37312,5971,7473,33964]
totalRecovery=[773480,325602,230688,129095,166584]
activeCases=[1139958,347973,239999,129360,34730]
country=['USA','Brail','Russia','India','Italy']

#Using numpy to group 3 different data with bars
X=np.arange(len(totalDeath))

#Passing the parameters to the bar function, this is the main function which creates the bar plot
#Using X now to align the bars side by side
plt.bar(X, totalDeath, color='black', width=0.25)
plt.bar(X + 0.25, totalRecovery, color='g', width=0.25)
plt.bar(X + 0.5, activeCases, color='b', width=0.25)

#Creating the legend of the bars in the plot
plt.legend(['Total Deaths', 'Total Recovery', 'Active Cases'])

#Overiding the x axis with the country names
plt.xticks([1 + 0.25 for i in range(5)], country)

#Giving the title for the plot
plt.title("Bar plot representing the total deaths, total recovered cases and active cases country wise")

#Naming the x and y axis
plt.xlabel('Countries')
plt.ylabel('Cases')

#Saving the plot as a 'png'
plt.savefig('4BarPlot.png')

#Displaying the bar plot
plt.show()
#Data Frame plotting
from pandas import DataFrame
import matplotlib.pyplot as plt

Data={'Tasks':[300,500,700],
      'Task Type': ['Tasks Pending','Tasks Ongoing','Tasks Completed']
     }

df=DataFrame(Data)
df.set_index('Task Type', inplace=True)

#autopct has extra % at the end as escape, as % is interpreted as formatting string begin by default.
#Only pie chart needs labels to be data frame index
df.plot.pie(y='Tasks', figsize=(10,10),autopct='%1.1f%%', startangle=90)
import numpy as np
import matplotlib.pyplot as plt
#if using a Jupyter notebook, include:
%matplotlib inline

#Pie chart, where the slices will be ordered and plotted counter-clockwise
labels=['Civil','Electrical','Mechanical','Chemical']
sizes=[15,30,45,10]

#Explode out the 'Chemical' pie piece by offsetting it a greter amount
explode=(0.1,0.1,0.1,0.4)

fig, ax=plt.subplots()
ax.pie(sizes,
      explode=explode,
      labels=labels,
      autopct='%1.1f%%',
      shadow=True,
      startangle=90)
ax.axis('equal')#Equal aspect ratio ensures the pie chart is circular.
ax.set_title('Engineering Disciplines')
plt.figure(figsize=(20,10))
plt.subplot(2,2,1)
plt.bar(range(1,6), np.random.randint(1,20,5))
plt.title("2,2,1")
plt.subplot(2,2,2)
plt.bar(range(1,6), np.random.randint(1,20,5))
plt.title("2,2,2")
plt.subplot(2,2,3)
# s is the size of dot
plt.scatter(range(1,6), np.random.randint(1,20,5), s=100, color="r")
plt.title("2,2,3")
plt.subplot(2,2,4)
plt.plot(range(1,6),np.random.randint(1,20,5),marker='o', color='g', linestyle='--')
plt.title("2,2,4")
plt.bar(range(1,6), np.random.randint(1,20,5),width=0.5)
plt.scatter(range(1,6), np.random.randint(1,20,5), s=200, color="r")
plt.plot(range(1,6),np.random.randint(1,20,5),marker='o', color='g', linestyle='--')
